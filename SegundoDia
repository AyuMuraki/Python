
# Aprendendo Python

Segundo dia de aula: Aprendendo os seguintes temas: interpola√ß√£o de strings, textos de m√∫ltiplas linhas, arredondamento de n√∫meros e estrutura de dados.



## Objetivo da Aula

O foco da aula de hoje foi aprofundar conceitos de Python, como interpola√ß√£o de strings, arredondamento de n√∫meros e o uso de textos de m√∫ltiplas linhas e estrutura de dados, essenciais para a manipula√ß√£o de dados e formata√ß√£o de sa√≠das.


## Aprendizados

Durante a aula de hoje, aprendi:

Interpola√ß√£o de Strings: Uma t√©cnica que permite inserir vari√°veis diretamente dentro de uma string, facilitando a cria√ß√£o de mensagens din√¢micas. Exemplo:

Exemplo:

```nome = "Ayumi"
print(f"Ol√°, {nome}!")
```

Arredondamento de N√∫meros: Utilizando fun√ß√µes como round(), aprendi a controlar a precis√£o de n√∫meros decimais, o que √© muito √∫til em c√°lculos que precisam de resultados espec√≠ficos.

Textos de M√∫ltiplas Linhas: Para textos que precisam ser exibidos ou armazenados em mais de uma linha, utilizei tr√™s aspas (""") para criar strings de v√°rias linhas, tornando o c√≥digo mais organizado e leg√≠vel.

Exemplo

```texto = """Este √© um texto
de v√°rias linhas
em Python."""
print(texto)
```


## Estrutura de Dados

As linguagens de programa√ß√£o utilizam estruturas de dados para **otimizar o armazenamento, 
a recupera√ß√£o e a manipula√ß√£o de informa√ß√µes**.

O Python possui v√°rios **tipos de dado**s nativos da linguagem, os **tipos de dados mais b√°sicos** s√£o:

| Tipo de dado | Descri√ß√£o |
| --- | --- |
| **str** | Valores do tipo texto |
| **int** | N√∫meros inteiros (1, 5, 10, ...) |
| **float** | N√∫meros de ponto flutuante (1.5, 0.99, 8.495, ...) |
| **bool** | Valores booleanos ou l√≥gicos (Verdadeiro / Falso) |

Convers√£o entre tipos de dados
Existem fun√ß√µes que nos permitem converter de um tipo de dado para outro tipo, por exemplo: 
Converter um n√∫mero do tipo string para o tipo inteiro.

 Exemplo:
```
n = '10'

n = int(n)
```
Convers√£o do tipo de dado string para o tipo n√∫mero de ponto flutuante:

Exemplo:
```
texto = '5.99'

texto = float(texto)
```


Convers√£o do tipo de dado inteiro para o tipo string:

Exemplo:
```
n = 8

n = str(n)
```

Convers√£o do tipo de dado inteiro para o tipo booleano:
Exemplo:
```
n = 8

n = bool(n)
```

# Como verificar o tipo de dado

Existem v√°rias maneiras de verificar o tipo de dados no Python. Uma das maneiras mais simples √© utilizando as fun√ß√µes type() ou isinstance().
Fun√ß√£o type()
A fun√ß√£o type retorna o tipo de dado do valor passado como argumento.

Exemplo:
```
type(10)

type('python')
```


### Fun√ß√£o **isinstance**()

A fun√ß√£o **isinstance** faz um compara√ß√£o entre o **valor do dado** e o **tipo de dado** informado e se os dois forem iguais a fun√ß√£o retornar√° verdadeiro, sen√£o retornar√° falso.



Exemplo:

```
isinstance(10, int)

isinstance(10, str)
```
üí°A fun√ß√£o **isinstance*** *recebe dois argumentos:

***isinstance**(**valor do dado**, **tipo de dado**)*

1. ***valor do dado**: Valor do dado que ser√° verificado*
2. ***tipo de dado**: Tipo de dado que o **valor do dado** ser√° verificado*

*Est√° fun√ß√£o sempre retorna um valor **booleano** (Verdadeiro ou Falso).*



#

*Os maiores desafios foram adaptar-me ao uso desses conceitos em conjunto, mas a pr√°tica cont√≠nua est√° ajudando a solidificar o conhecimento. A cada exerc√≠cio, a l√≥gica fica mais clara.*
## Recursos e Dicas

Utilizamos o VS Code com o recurso de preenchimento autom√°tico de c√≥digo (Code Completion), que facilita muito a escrita da sintaxe. Al√©m disso, o Anaconda Cloud foi utilizado para executar os c√≥digos, sendo uma √≥tima plataforma para rodar Jupyter Notebooks sem precisar instalar nada localmente.




## Pr√≥ximos Passos

Estou animada para continuar explorando Python e ver como esses conceitos ser√£o aplicados em projetos mais complexos no futuro

